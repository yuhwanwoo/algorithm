package study;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class baek1799 {
	static int N, M;
	static int[][] map;
	static int[] isused01;
	static int[] isused02;
	static int leng;
	static int cnt;
	static ArrayList<Pair> pair;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        
        N = Integer.parseInt(st.nextToken());
        map = new int[N][M];
        
        pair=new ArrayList<>();
        
        for (int i = 0; i < N; i++) {
            st = new StringTokenizer(br.readLine());
            for (int j = 0; j < N; j++) {
                map[i][j] = Integer.parseInt(st.nextToken());
                pair.add(new Pair(i, j));
            }
        }
        for (int i = 0; i < pair.size(); i++) {
			System.out.println(pair.get(i));
		}
	}
	
	public static void solution(int index,int count) {
		if(index==leng) {
			cnt=Math.max(cnt, count);
			return;
		}
		
	}

}

class Pair{
	Integer y;
	Integer x;
	public Pair(Integer y, Integer x) {
		this.y = y;
		this.x = x;
	}
	public Integer first() {
		return y;
	}
	public Integer second() {
		return x;
	}
	
}
